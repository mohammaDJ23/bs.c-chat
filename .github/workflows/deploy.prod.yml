name: Deploy to prod environment

on:
  push:
    branches:
      - master

jobs:
  build-push-action:
    name: Building the image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ secrets.DOCKER_USERNAME }}/c-chat-prod
          tags: |
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'master') }}

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          file: ./Dockerfile.prod
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            FIREBASE_API_KEY=${{ secrets.FIREBASE_API_KEY }}
            FIREBASE_AUTH_DOMAIN=${{ secrets.FIREBASE_AUTH_DOMAIN }}
            FIREBASE_PROJECT_ID=${{ secrets.FIREBASE_PROJECT_ID }}
            FIREBASE_STORAGE_BUCKET=${{ secrets.FIREBASE_STORAGE_BUCKET }}
            FIREBASE_MESSAGING_SENDER_ID=${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
            FIREBASE_APP_ID=${{ secrets.FIREBASE_APP_ID }}
            FIREBASE_MEASUREMENT_ID=${{ secrets.FIREBASE_MEASUREMENT_ID }}
            CHAT_PUBLIC_PATH=${{ secrets.CHAT_PUBLIC_PATH }}
            CACHE_SECRET_KEY=${{ secrets.PROD_CACHE_SECRET_KEY }}
            USER_SERVICE=${{ secrets.PROD_USER_SERVICE }}
            NOTIFICATION_SERVICE=${{ secrets.PROD_NOTIFICATION_SERVICE }}
            CONTAINER_APP=${{ secrets.PROD_CONTAINER_APP }}
            CHAT_APP=${{ secrets.PROD_CHAT_APP }}
            PORT=${{ secrets.PROD_PORT }}

  deploying-ssh:
    needs: build-push-action
    name: Running the deployment on the vps server
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Executing the remote ssh command
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          command_timeout: 60m
          script: |
            cd app
            npm run docker:stop:c-chat:prod
            npm run docker:rm:c-chat:prod
            npm run docker:rmi:c-chat:prod
            npm run docker:compose:up:c-chat:prod
